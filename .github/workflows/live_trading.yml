name: Live Trading (09:00~14:35 KST)

on:
  push:
    branches: [ feature/rkmax, feature/rkmax-v2 ]
  pull_request:
    branches: [ feature/rkmax, feature/rkmax-v2 ]
  schedule:
    # 매 영업일 09:00 KST = 00:00 UTC (월~금)
    - cron: "0 0 * * 1-5"
  workflow_dispatch:

concurrency:
  group: live-trading
  cancel-in-progress: true

jobs:
  trade:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    env:
      # ===== Secrets =====
      KIS_APP_KEY: ${{ secrets.KIS_APP_KEY }}
      KIS_APP_SECRET: ${{ secrets.KIS_APP_SECRET }}
      CANO: ${{ secrets.CANO }}
      ACNT_PRDT_CD: ${{ secrets.ACNT_PRDT_CD }}
      KIS_ENV: ${{ secrets.KIS_ENV }}

      # ===== 전략/리스크 =====
      PARTIAL1: "0.5"
      PARTIAL2: "0.3"
      TRAIL_PCT: "0.02"
      FAST_STOP: "0.01"
      ATR_STOP: "1.5"
      TIME_STOP_HHMM: "13:00"

      # ===== 스케줄/컷오프 =====
      SELL_FORCE_TIME: "14:30"
      ACTION_KILL_TIME: "14:35"

      # ===== 기타 =====
      DAILY_CAPITAL: "10000000"
      SLIPPAGE_ENTER_GUARD_PCT: "1.5"
      API_RATE_SLEEP_SEC: "0.5"
      FORCE_SELL_PASSES_CUTOFF: "2"
      FORCE_SELL_PASSES_CLOSE: "4"
      SELL_ALL_BALANCES_AT_CUTOFF: "true"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install fastapi uvicorn

      - name: Run FastAPI (bg) with healthcheck
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          set -euxo pipefail
          nohup uvicorn rolling_k_auto_trade_api.main:app --host 127.0.0.1 --port 8000 > fastapi.log 2>&1 &
          SV_PID=$!
          for i in {1..90}; do
            if curl -sSf http://127.0.0.1:8000/docs >/dev/null; then
              echo "API UP after $i sec"
              break
            fi
            if ! ps -p "$SV_PID" >/dev/null; then
              echo "Uvicorn crashed early. ---- fastapi.log ----"
              cat fastapi.log || true
              exit 1
            fi
            sleep 1
          done

      # 수동 실행 시 09:00 KST 이전이면 여기서 대기 → 정확히 09:00에 trader 시작
      - name: Wait until 09:00 KST (for manual runs)
        run: |
          set -euxo pipefail
          NOW_UTC=$(date -u +%s)
          TARGET_UTC=$(date -u -d "today 00:00 +9 hours" +%s)
          if [ $NOW_UTC -lt $TARGET_UTC ]; then
            echo "Sleeping $((TARGET_UTC - NOW_UTC))s until 09:00 KST..."
            sleep $((TARGET_UTC - NOW_UTC))
          fi

      - name: Run live trader (safe timeout)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          set -euxo pipefail
          # 5h45m → 09:00~14:45 범위 내 종료 (14:30 강제청산 후 종료 보장)
          timeout 5h45m python -m trader.trader || true

      - name: Upload trade logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trade-logs
          path: trader/logs/*.json
          if-no-files-found: ignore
          retention-days: 14

      - name: FastAPI log (cat)
        if: always()
        run: |
          echo "::group::FastAPI Server Log"
          cat fastapi.log || true
          echo "::endgroup::"

      - name: Upload fastapi.log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fastapi-log
          path: fastapi.log
          if-no-files-found: ignore
          retention-days: 14
