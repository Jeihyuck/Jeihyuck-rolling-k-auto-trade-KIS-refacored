name: Trade Monitor (run maximus)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # KST 08:30 = UTC 23:30 (주중만)
    - cron: "30 10 * * 1-5"
    #- cron: "30 23 * * 1-5"
  workflow_dispatch:

jobs:
  monitor-trade:
    runs-on: ubuntu-latest
    # KST 기준 시간 로그를 위해
    env:
      TZ: Asia/Seoul

      # ===== 민감정보(Secrets) =====
      KIS_APP_KEY: ${{ secrets.KIS_APP_KEY }}
      KIS_APP_SECRET: ${{ secrets.KIS_APP_SECRET }}
      CANO: ${{ secrets.CANO }}
      ACNT_PRDT_CD: ${{ secrets.ACNT_PRDT_CD }}
      KIS_ENV: ${{ secrets.KIS_ENV }}

      # ===== 전략/운영 파라미터 =====
      PARTIAL1: "0.5"
      PARTIAL2: "0.3"
      TRAIL_PCT: "0.02"
      FAST_STOP: "0.01"
      ATR_STOP: "1.5"
      TIME_STOP_HHMM: "13:00"
      SELL_FORCE_TIME: "15:10"

      MIN_TRADES: "5"
      MAX_MDD_PCT: "30"
      MIN_WINRATE: "50"
      MIN_CUMRET: "2"
      TOP_K_LIMIT: "20"

      TOTAL_CAPITAL: "10000000"
      MIN_QTY_PER_TICKET: "1"

      # K grid (기본 고정; 내부 코드가 ATR 기반 동적 step을 지원해도 무방)
      K_MIN: "0.1"
      K_MAX: "0.9"
      K_STEP: "0.1"

      ALLOW_AFTER_HOURS: "0"
      ORDER_THROTTLE_SEC: "0.3"
      REBALANCE_OUT_DIR: "rebalance_results"

    steps:
      # 핵심: main에 있는 워크플로로 실행하되 코드베이스는 maximus 브랜치로 체크아웃
      - name: Checkout maximus branch
        uses: actions/checkout@v4
        with:
          ref: maximus
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Launch Rebalancing API (FastAPI, background)
        run: |
          nohup uvicorn rolling_k_auto_trade_api.main:app --host 0.0.0.0 --port 8000 > fastapi.log 2>&1 &
          # 짧은 헬스체크 루프 (최대 ~30초)
          for i in {1..30}; do
            sleep 1
            if grep -qi "Started server process" fastapi.log || lsof -i:8000 -sTCP:LISTEN >/dev/null 2>&1; then
              echo "FastAPI is up."
              break
            fi
          done

      - name: Run trader
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python -m trader.trader

      - name: Build CEO reports
        if: always()
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python -m trader.report_ceo || true

      - name: Upload CEO report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ceo-report
          path: reports/
          if-no-files-found: warn

      - name: Upload rebalance JSON
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rebalance-results
          path: rebalance_results/*.json
          if-no-files-found: warn
          retention-days: 60

      - name: Show FastAPI log
        if: always()
        run: |
          echo "::group::FastAPI Server Log"
          (tail -n 500 fastapi.log || true)
          echo "::endgroup::"

      - name: Upload FastAPI log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fastapi-log
          path: fastapi.log
          if-no-files-found: ignore
          retention-days: 14

